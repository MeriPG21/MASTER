USE operaciiones_ucm;
#2.1 REALIZAMOS UNA CONSULTA DONDE OBTENGAMOS POR PAÍS Y ESTADO DE OPERACION, EL TOTAL DE OPERACIONES Y SU IMPORTE MEDIO. LA CONSULTA DEBE CUMPLIR LAS SIGUIENTES CONDICIONES:
	#OPERACIONES POSTERIORES AL 01-07-2015
    #OPERACIONES REALIZADAS EN FRANCIA, PROTUGAL Y ESPAÑA
    #OPERACIONES CON UN VALOR MAYOR DE 100E y menor de 1500E
#ORDENAMOS LOS RESULTADOS POR EL PROMEDIO DEL IMPORTE DE MANERA DESCENDENTE.
SELECT country, status, COUNT(order_id) AS total_operaciones, AVG(amount) AS importe_medio
FROM orders
WHERE created_at > 01-07-2015 AND country IN ('Francia', 'Portugal', 'EspaÃ±a') AND amount > 100 AND amount < 1500
GROUP BY country, status
ORDER BY importe_medio DESC;

#2.2 REALIZAMOS UNA CONSULTA DONDE OBTENGAMOS LOS 3 PAISES CON EL MAYOR NUMERO DE OPERACIOES, EL TOTAL DE OPERACIONES, LA OPEARCIÓN CON UN VALOR MÁXIMO Y LA OPERACIÓN CON EL VALOR MÍNIMO PARA CADA PAÍS. LA CONSULTA DEBE CUMPLIR LAS SIGUIENTES CONDICIONES:
	#EXCLUIMOS AQUELLAS OPERACIONES CON EL ESTADO "DELINQUENT" Y "CANCELLED"
    #OPERACIONES CON UN VALOR MAYOR DE 100E

SELECT country, COUNT(order_id) AS numero_operaciones, MAX(amount) AS operacion_valor_max, MIN(amount) AS operacion_valor_min
FROM orders
WHERE status <> 'DELINQUENT' AND status <> 'CANCELLED' AND amount > 100
GROUP BY country
ORDER BY numero_operaciones DESC
LIMIT 3;

#PODRÍAMOS HACERLO TAMBIÉN ASÍ:
SELECT country, COUNT(order_id) AS numero_operaciones, MAX(amount) AS operacion_valor_max, MIN(amount) AS operacion_valor_min
FROM orders
WHERE status IN ('ACTIVE', 'CLOSED') AND AMOUNT > 100
GROUP BY country
ORDER BY numero_operaciones DESC
LIMIT 3;

#3.1 REALIZAMOS UNA CONSULTA DONDE OBTENGAMOS, POR PAIS Y COMERCIO, EL TOTAL DE OPERACIONES, SU VALOR PROMEDIO Y EL TOTAL DE DEVOLUCIONES. LA CONSULTA DEBE CUMPLIR LAS SIGUIENTES CONDICIONES:
	#SE DEBE MOSTRAR EL NOMBRE Y EL ID DEL COMERCIO
    #COMERCIOS CON MÁS DE 10 VENTAS
    #COMERCIO DE MARRUECOS, ITALIA, ESPAÑA Y PORTUGAL
    #CREAMOS UN CAMPO QUE IDENTIFIQUE SI EL COMERCIO ACEPTA O NO DEVOLUCIONES. SI NO ACEPTA (TOTAL DE DEVOLUCIONES ES IGUAL A 0 EL CAMPO DEBE CONTENER EL VALOR "NO" Y SI SI LO ACEPTA (TOTAL DE DEVOLUCIONES MAYOR A 0 EL CAMPO DEBE CONTENER EL VALOR "SI". LLAMAREMOS AL CAMPO"ACEPTA_DEVOLUCIONES".
#ORDENAMOS LOS RESULTADOS POR EL TOTAL DE OPERACIONES DE MANERA DESCENDENTE

SELECT country, brand, merchant_id, COUNT(order_id) AS total_operaciones, AVG(amount) AS valor_promedio, COUNT(refunded_at) AS total_devoluciones,
CASE 
WHEN COUNT(refunded_at) = 0 THEN 'NO'
ELSE 'SI'
END AS acepta_devoluciones
FROM orders AS o
LEFT JOIN refunds AS r
ON o.order_id = r.`order ID`
LEFT JOIN merchants as m
ON o.merchant_id = m.`merchant ID`
WHERE country IN ('Italia', 'EspaÃ±a', 'Marruecos', 'Portugal')
GROUP BY country, brand, merchant_id
HAVING COUNT(order_id) > 10
ORDER BY total_operaciones ASC;

#3.2 REALIZAMOS UNA CONSULTA DONDE VAMOS A TRAER TODOS LOS CAMPOS DE LAS TABLAS OPERACIONES Y COMERCIOS. DE LA TABLA DEVOLUCIONES VAMOS A TRAER EL CONTEO DE DEVOLUCIONES POR OPERACIÓN Y LA SUMA DEL VALOR DE LAS DEVOLUCIONES. UNA VEZ TENGAMOS LA CONSULTA ANTERIOR, CREAMOS UNA VISTA CON EL NOMBRE ORDERS_VIEWS DENTRO DEL ESQUEMA TAREA_UCM CON ESTA CONSULTA.
#NOTA: LA TABLA REFUNDS CONTIENE MÁS DE UNA DEVOLUCIÓN POR OPERACIÓN, POR LO QUE, PARA HACER EL CRUCE ES MUY IMPORTANTE QUE AGRUPEMOS LAS DEVOLUCIONES
SELECT `merchant ID`, brand, order_id, created_at, status, amount, merchant_id, country, COUNT(refunded_at) AS total_devoluciones, SUM(Cantidad) AS valor_devolucion
FROM merchants AS m 
INNER JOIN orders AS o
ON m.`merchant ID`= o.merchant_id
LEFT JOIN refunds AS r
ON o.order_id = r.`order ID`
GROUP BY `merchant ID`, brand, order_id, created_at, status, amount, merchant_id, country;

CREATE VIEW orders_view AS (SELECT `merchant ID`, brand, order_id, created_at, status, amount, merchant_id, country, COUNT(refunded_at) AS total_devoluciones, SUM(Cantidad) AS valor_devolucion
							FROM merchants AS m 
							INNER JOIN orders AS o
							ON m.`merchant ID`= o.merchant_id
							LEFT JOIN refunds AS r
							ON o.order_id = r.`order ID`
							GROUP BY `merchant ID`, brand, order_id, created_at, status, amount, merchant_id, country);

#4 REALIZAMOS UNA CONSULTA PARA VALORAR LA PERDIDA/TIENDA/PAÍS, DE ESTA FORMA PODEMOS VALORAR SI SE PRECISA UN AUMENTO DE SEGURIDAD, SI EXISTE UN PATRÓN EN EL TIPO DE TIENDA O UN PATRÓN POR EL PAÍS
SELECT brand, country,
SUM(CASE 
WHEN status='DELINQUENT' THEN 1 
ELSE 0
END)/(SUM(CASE 
WHEN status IN('ACTIVE','CLOSED') THEN 1
ELSE 0 
END)+SUM(CASE 
WHEN status='DELINQUENT' THEN 1 
ELSE 0
END)) AS porcentaje
FROM orders AS o
LEFT JOIN merchants AS m 
ON o.merchant_id = m.`merchant ID`
GROUP BY brand, country
ORDER BY porcentaje DESC;
